version: '3.8'

services:
  # Docker Registry (proxy 模式)
  registry:
    image: registry:2
    container_name: docker-registry-proxy
    restart: unless-stopped
    environment:
      # Registry 配置文件路径
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /var/lib/registry
      # 启用删除功能（可选）
      REGISTRY_STORAGE_DELETE_ENABLED: "true"
      # 日志级别
      REGISTRY_LOG_LEVEL: info
    volumes:
      # 挂载配置文件
      - ./config/registry-config.yml:/etc/docker/registry/config.yml:ro
      # 挂载认证文件
      - ./auth/htpasswd:/auth/htpasswd:ro
      # 数据目录（虽然是代理模式，但仍需要临时存储）
      - registry-data:/var/lib/registry
    networks:
      - internal
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:5000/v2/"]
      interval: 30s
      timeout: 10s
      retries: 3
    # 限制容器日志大小
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx 反向代理 + Rate Limiting
  nginx:
    image: nginx:alpine
    container_name: docker-registry-nginx
    restart: unless-stopped
    volumes:
      # Nginx 配置
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      # 禁用默认配置（防止冲突）
      - /dev/null:/etc/nginx/conf.d/default.conf:ro
      # 日志目录
      - nginx-logs:/var/log/nginx
      # Logrotate 配置
      - ./config/logrotate.conf:/etc/logrotate.d/nginx:ro
    networks:
      - internal
      - ${TRAEFIK_NETWORK:-traefik-net}
    depends_on:
      - registry
    # 限制容器日志大小
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      # 启用 Traefik
      - "traefik.enable=true"
      
      # 域名配置（从 .env 读取）
      - "traefik.http.routers.docker-proxy.rule=Host(`${REGISTRY_DOMAIN:-docker-proxy.yourdomain.com}`)"
      
      # HTTPS entrypoint（从 .env 读取）
      - "traefik.http.routers.docker-proxy.entrypoints=${TRAEFIK_ENTRYPOINT:-websecure}"
      
      # TLS 证书解析器（从 .env 读取）
      - "traefik.http.routers.docker-proxy.tls.certresolver=${TRAEFIK_CERTRESOLVER:-letsencrypt}"
      
      # 自动申请 TLS 证书
      - "traefik.http.routers.docker-proxy.tls=true"
      
      # 指定服务端口
      - "traefik.http.services.docker-proxy.loadbalancer.server.port=80"
      
      # 指定 Traefik 网络（如果有多个网络）
      - "traefik.docker.network=${TRAEFIK_NETWORK:-traefik-net}"
      
      # 传递真实客户端 IP
      - "traefik.http.services.docker-proxy.loadbalancer.passhostheader=true"

networks:
  # 内部网络（Nginx <-> Registry）
  internal:
    driver: bridge
  
  # Traefik 外部网络
  traefik-net:
    external: true  # TODO: 如果网络不存在，需要先创建：docker network create traefik-net

volumes:
  # Registry 数据卷（代理模式下主要存储临时数据和缓存）
  registry-data:
  # Nginx 日志
  nginx-logs:
